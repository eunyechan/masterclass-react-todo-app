{"version":3,"sources":["atoms.tsx"," components/CreateToDo.tsx"," components/ToDo.tsx"," components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","categoryState","atom","key","default","TO_DO","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","Form","styled","form","FormInput","input","Button","button","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","useForm","register","handleSubmit","setValue","onSubmit","oldToDos","text","id","Date","now","style","display","width","required","placeholder","List","li","Span","span","ToDo","onClick","event","name","currentTarget","targetIndex","findIndex","oldToDo","newToDo","console","log","slice","DOING","DONE","Container","div","HeaderTitle","SelectContainer","select","Option","option","ToDoList","useRecoilState","setCategory","opacity","value","onInput","map","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","theme","bgColor","textColor","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.918b9d3a.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { categoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nconst Form = styled.form`\n  display: flex;\n  height: 35px;\n  margin: 10px 0px;\n`;\n\nconst FormInput = styled.input`\n  display: \"flex\";\n  width: \"400px\";\n  background-color: transparent;\n  padding: 5px;\n  border-right: none;\n  margin-right: 10px;\n  color: white;\n  font-size: 18px;\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  color: white;\n  border-radius: 10px;\n`;\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit(handleValid)}>\n        <FormInput\n          style={{ display: \"flex\", width: \"400px\" }}\n          {...register(\"toDo\", {\n            required: \"Please write a To Do\",\n          })}\n          placeholder=\"Write a to do\"\n        />\n        <Button>Add</Button>\n      </Form>\n    </>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, IToDo, toDoState } from \"../atoms\";\n\nconst List = styled.li`\n  list-style: none;\n  display: flex;\n  align-items: center;\n  margin-top: 30px;\n  justify-content: space-between;\n`;\n\nconst Span = styled.span`\n  color: rgb(255, 255, 255);\n  font-size: 18px;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  box-sizing: border-box;\n  background-color: transparent;\n  color: white;\n  padding: 10px;\n  border-radius: 10px;\n  margin-left: 10px;\n`;\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const oldToDo = oldToDos[targetIndex];\n      const newToDo = { text, id, category: name as any };\n      console.log(oldToDo, newToDo);\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n\n  return (\n    <List>\n      <Span>{text}</Span>\n      <div style={{ display: \"flex\" }}>\n        {category !== Categories.DOING && (\n          <Button name={Categories.DOING} onClick={onClick}>\n            Doing\n          </Button>\n        )}\n        {category !== Categories.TO_DO && (\n          <Button name={Categories.TO_DO} onClick={onClick}>\n            ToDo\n          </Button>\n        )}\n        {category !== Categories.DONE && (\n          <Button name={Categories.DONE} onClick={onClick}>\n            Done\n          </Button>\n        )}\n      </div>\n    </List>\n  );\n}\nexport default ToDo;\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, categoryState, toDoSelector } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n  background-color: #222424;\n  height: 100vh;\n`;\n\nconst HeaderTitle = styled.div`\n  padding: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 60px;\n  font-weight: bolder;\n`;\n\nconst SelectContainer = styled.select`\n  width: 100%;\n  margin: 10px 0px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: transparent;\n  color: white;\n  font-size: 20px;\n`;\n\nconst Option = styled.option`\n  color: black;\n`;\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n  return (\n    <>\n      <body>\n        <Container>\n          <HeaderTitle>To Dos</HeaderTitle>\n          <hr style={{ opacity: \"0.4\" }} />\n          <SelectContainer value={category} onInput={onInput}>\n            <Option value={Categories.TO_DO}>To Do</Option>\n            <Option value={Categories.DOING}>Doing</Option>\n            <Option value={Categories.DONE}>Done</Option>\n          </SelectContainer>\n          <CreateToDo />\n          {toDos?.map((toDo) => (\n            <ToDo key={toDo.id} {...toDo} />\n          ))}\n        </Container>\n      </body>\n    </>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./ components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n  background-color: #222424;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}